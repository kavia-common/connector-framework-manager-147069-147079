{"is_source_file": true, "format": "Python", "description": "This source file defines the PluginManager class, which manages registration, retrieval, and availability checking of connector plugins in a software project. It imports specific plugin classes and maintains an internal registry of plugins, providing methods for plugin management tasks.", "external_files": ["src.plugins.base", "src.plugins.jira", "src.plugins.confluence", "src.plugins.slack", "src.plugins.notion", "src.plugins.figma", "src.plugins.datadog"], "external_methods": ["ConnectorPlugin.metadata.key"], "published": ["plugin_manager"], "classes": [{"name": "PluginManager", "description": "Manages registration and access to connector plugins, providing methods to register, retrieve, and verify plugin availability."}], "methods": [{"name": "__init__(self)", "description": "Initializes the plugin manager and registers built-in plugins.", "scope": "PluginManager", "scopeKind": "class"}, {"name": "_register_builtin_plugins(self)", "description": "Registers all predefined connector plugins upon initialization.", "scope": "PluginManager", "scopeKind": "class"}, {"name": "register_plugin(self, plugin: ConnectorPlugin)", "description": "Registers a given connector plugin into the internal registry.", "scope": "PluginManager", "scopeKind": "class"}, {"name": "List[ConnectorPlugin] get_all_plugins(self)", "description": "Returns a list of all registered connector plugins.", "scope": "PluginManager", "scopeKind": "class"}, {"name": "Optional[ConnectorPlugin] get_plugin(self, key: str)", "description": "Retrieves a specific plugin by its key, or None if not found.", "scope": "PluginManager", "scopeKind": "class"}, {"name": "List[str] get_plugin_keys(self)", "description": "Returns a list of all plugin keys currently registered.", "scope": "PluginManager", "scopeKind": "class"}, {"name": "bool is_plugin_available(self, key: str)", "description": "Checks whether a plugin with the given key is registered and available.", "scope": "PluginManager", "scopeKind": "class"}], "calls": ["self.register_plugin(plugin)", "plugin.metadata.key", "list(self._plugins.values())", "self._plugins.get(key)", "list(self._plugins.keys())"], "search-terms": ["PluginManager", "connector plugins registry", "register_builtin_plugins", "plugin management", "ConnectorPlugin", "external plugin classes"], "state": 2, "file_id": 26, "knowledge_revision": 86, "git_revision": "", "revision_history": [{"71": ""}, {"86": ""}], "ctags": [{"_type": "tag", "name": "PluginManager", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/services/plugin_manager.py", "pattern": "/^class PluginManager:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/services/plugin_manager.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "PluginManager", "scopeKind": "class"}, {"_type": "tag", "name": "_register_builtin_plugins", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/services/plugin_manager.py", "pattern": "/^    def _register_builtin_plugins(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "PluginManager", "scopeKind": "class"}, {"_type": "tag", "name": "get_all_plugins", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/services/plugin_manager.py", "pattern": "/^    def get_all_plugins(self) -> List[ConnectorPlugin]:$/", "language": "Python", "typeref": "typename:List[ConnectorPlugin]", "kind": "member", "signature": "(self)", "scope": "PluginManager", "scopeKind": "class"}, {"_type": "tag", "name": "get_plugin", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/services/plugin_manager.py", "pattern": "/^    def get_plugin(self, key: str) -> Optional[ConnectorPlugin]:$/", "language": "Python", "typeref": "typename:Optional[ConnectorPlugin]", "kind": "member", "signature": "(self, key: str)", "scope": "PluginManager", "scopeKind": "class"}, {"_type": "tag", "name": "get_plugin_keys", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/services/plugin_manager.py", "pattern": "/^    def get_plugin_keys(self) -> List[str]:$/", "language": "Python", "typeref": "typename:List[str]", "kind": "member", "signature": "(self)", "scope": "PluginManager", "scopeKind": "class"}, {"_type": "tag", "name": "is_plugin_available", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/services/plugin_manager.py", "pattern": "/^    def is_plugin_available(self, key: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, key: str)", "scope": "PluginManager", "scopeKind": "class"}, {"_type": "tag", "name": "plugin_manager", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/services/plugin_manager.py", "pattern": "/^plugin_manager = PluginManager()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "register_plugin", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/services/plugin_manager.py", "pattern": "/^    def register_plugin(self, plugin: ConnectorPlugin):$/", "language": "Python", "kind": "member", "signature": "(self, plugin: ConnectorPlugin)", "scope": "PluginManager", "scopeKind": "class"}], "hash": "750790327312eee1eca00a76f4bc7870", "format-version": 4, "code-base-name": "core_backend", "filename": "core_backend/src/services/plugin_manager.py", "fields": [{"name": "plugin_manager = PluginManager()", "scope": "", "scopeKind": "", "description": "unavailable"}]}