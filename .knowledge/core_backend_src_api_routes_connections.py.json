{"is_source_file": true, "format": "Python", "description": "This is a Python source file defining API routes for managing user connections to various connectors using FastAPI. It includes endpoints for listing, retrieving, creating, updating, deleting, and testing connections, with dependencies on database models, plugin management, and JWT authentication.", "external_files": ["src/database/connection.py", "src/models/user.py", "src/models/connector.py", "src/models/connection.py", "src/services/plugin_manager.py", "src/auth/jwt.py", "src/api/schemas.py"], "external_methods": ["get_current_user_optional", "get_db", "plugin_manager.get_plugin"], "published": ["list_connections", "get_connection", "create_connection", "update_connection", "delete_connection", "test_connection"], "classes": [], "methods": [{"name": "Optional[Dict[str,Any]] get_current_user(authorization: Optional[str] = Header(None))", "description": "Extract current user from authorization header.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] require_user(current_user: Optional[Dict[str, Any]] = Depends(get_current_user))", "description": "Ensure that the request is authenticated by verifying the current user.", "scope": "", "scopeKind": ""}, {"name": "list_connections( current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )", "description": "Fetch all connections for the authenticated user, including plugin info and OAuth token status.", "scope": "", "scopeKind": ""}, {"name": "get_connection( connection_id: int, current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )", "description": "Retrieve details of a specific connection by ID for the authenticated user.", "scope": "", "scopeKind": ""}, {"name": "create_connection( connection_data: ConnectionCreate, current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )", "description": "Create a new user connection, possibly creating new connector entities based on plugin info.", "scope": "", "scopeKind": ""}, {"name": "update_connection( connection_id: int, connection_data: ConnectionUpdate, current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )", "description": "Update configuration or status of an existing connection.", "scope": "", "scopeKind": ""}, {"name": "delete_connection( connection_id: int, current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )", "description": "Remove a user connection from the database.", "scope": "", "scopeKind": ""}, {"name": "test_connection( connection_id: int, current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )", "description": "Perform a test to verify the connection works, updating status and returning sample data or error information.", "scope": "", "scopeKind": ""}], "calls": ["get_current_user_optional", "get_db", "plugin_manager.get_plugin", "db.query", "db.add", "db.commit", "db.refresh"], "search-terms": ["connections API", "FastAPI route handlers", "connection CRUD", "plugin_manager", "OAuth tokens", "ConnectionResponse schema", "connections endpoint"], "state": 2, "file_id": 33, "knowledge_revision": 111, "git_revision": "", "revision_history": [{"100": ""}, {"105": ""}, {"110": ""}, {"111": ""}], "ctags": [{"_type": "tag", "name": "create_connection", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/connections.py", "pattern": "/^async def create_connection($/", "language": "Python", "kind": "function", "signature": "( connection_data: ConnectionCreate, current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "delete_connection", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/connections.py", "pattern": "/^async def delete_connection($/", "language": "Python", "kind": "function", "signature": "( connection_id: int, current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "get_connection", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/connections.py", "pattern": "/^async def get_connection($/", "language": "Python", "kind": "function", "signature": "( connection_id: int, current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/connections.py", "pattern": "/^def get_current_user(authorization: Optional[str] = Header(None)) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(authorization: Optional[str] = Header(None))"}, {"_type": "tag", "name": "list_connections", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/connections.py", "pattern": "/^async def list_connections($/", "language": "Python", "kind": "function", "signature": "( current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "require_user", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/connections.py", "pattern": "/^def require_user(current_user: Optional[Dict[str, Any]] = Depends(get_current_user)) -> Dict[str/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(current_user: Optional[Dict[str, Any]] = Depends(get_current_user))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/connections.py", "pattern": "/^router = APIRouter(prefix=\"\\/connections\", tags=[\"connections\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "test_connection", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/connections.py", "pattern": "/^async def test_connection($/", "language": "Python", "kind": "function", "signature": "( connection_id: int, current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "update_connection", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/connections.py", "pattern": "/^async def update_connection($/", "language": "Python", "kind": "function", "signature": "( connection_id: int, connection_data: ConnectionUpdate, current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )"}], "hash": "314cde341cb3e7a4266e99af139ccc26", "format-version": 4, "code-base-name": "core_backend", "filename": "core_backend/src/api/routes/connections.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/connections\", tags=[\"connections\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}