{"is_source_file": true, "format": "Python", "description": "This Python source file defines a PluginManager class responsible for registering, managing, and retrieving connector plugins such as Jira, Confluence, Slack, Notion, Figma, and Datadog. It includes methods for plugin registration, querying, and checking plugin availability, maintaining an internal registry of plugin instances.", "external_files": ["src.plugins.base", "src.plugins.jira", "src.plugins.confluence", "src.plugins.slack", "src.plugins.notion", "src.plugins.figma", "src.plugins.datadog"], "external_methods": ["ConnectorPlugin.metadata.key", "ConnectorPlugin.metadata.name", "ConnectorPlugin.metadata.supports_oauth", "ConnectorPlugin.authorize_url"], "published": ["plugin_manager"], "classes": [{"name": "PluginManager", "description": "Manages registration, retrieval, and status checking of various connector plugins. Provides methods for plugin registration, querying by key, listing all plugins, and checking if a plugin is available or configured."}], "methods": [{"name": "__init__(self)", "description": "Initializes the plugin manager and registers built-in plugins.", "scope": "PluginManager", "scopeKind": "class"}, {"name": "None _register_builtin_plugins(self)", "description": "Registers a predefined list of available connector plugins.", "scope": "PluginManager", "scopeKind": "class"}, {"name": "None register_plugin(self, plugin: ConnectorPlugin)", "description": "Registers a single connector plugin into the internal registry.", "scope": "PluginManager", "scopeKind": "class"}, {"name": "List[ConnectorPlugin] get_all_plugins(self)", "description": "Returns a list of all registered connector plugins.", "scope": "PluginManager", "scopeKind": "class"}, {"name": "Optional[ConnectorPlugin] get_plugin(self, key: str)", "description": "Retrieves a specific plugin by its key, or None if not found.", "scope": "PluginManager", "scopeKind": "class"}, {"name": "List[str] get_plugin_keys(self)", "description": "Returns a list of all registered plugin keys.", "scope": "PluginManager", "scopeKind": "class"}, {"name": "bool is_plugin_available(self, key: str)", "description": "Checks whether a plugin with the given key is registered.", "scope": "PluginManager", "scopeKind": "class"}, {"name": "List[Dict[str,Any]] get_plugin_availability(self)", "description": "Provides a detailed list of plugins along with their configuration status and OAuth support.", "scope": "PluginManager", "scopeKind": "class"}], "calls": ["self.register_plugin(plugin)", "plugin.metadata.key", "plugin.metadata.name", "plugin.metadata.supports_oauth", "plugin.authorize_url"], "search-terms": ["PluginManager", "connector plugins", "register_plugin", "get_plugin", "plugin availability", "OAuth support", "built-in plugins"], "state": 2, "file_id": 26, "knowledge_revision": 149, "git_revision": "3d1e59a733b6a9520b1215bcf9070e4413e3e4ed", "revision_history": [{"71": ""}, {"86": ""}, {"148": "2ec6dddd09bed28218dc8f9df2e7ee65406d9d04"}, {"149": "3d1e59a733b6a9520b1215bcf9070e4413e3e4ed"}], "ctags": [{"_type": "tag", "name": "PluginManager", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/services/plugin_manager.py", "pattern": "/^class PluginManager:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/services/plugin_manager.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "PluginManager", "scopeKind": "class"}, {"_type": "tag", "name": "_register_builtin_plugins", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/services/plugin_manager.py", "pattern": "/^    def _register_builtin_plugins(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "PluginManager", "scopeKind": "class"}, {"_type": "tag", "name": "get_all_plugins", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/services/plugin_manager.py", "pattern": "/^    def get_all_plugins(self) -> List[ConnectorPlugin]:$/", "language": "Python", "typeref": "typename:List[ConnectorPlugin]", "kind": "member", "signature": "(self)", "scope": "PluginManager", "scopeKind": "class"}, {"_type": "tag", "name": "get_plugin", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/services/plugin_manager.py", "pattern": "/^    def get_plugin(self, key: str) -> Optional[ConnectorPlugin]:$/", "language": "Python", "typeref": "typename:Optional[ConnectorPlugin]", "kind": "member", "signature": "(self, key: str)", "scope": "PluginManager", "scopeKind": "class"}, {"_type": "tag", "name": "get_plugin_availability", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/services/plugin_manager.py", "pattern": "/^    def get_plugin_availability(self) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "member", "signature": "(self)", "scope": "PluginManager", "scopeKind": "class"}, {"_type": "tag", "name": "get_plugin_keys", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/services/plugin_manager.py", "pattern": "/^    def get_plugin_keys(self) -> List[str]:$/", "language": "Python", "typeref": "typename:List[str]", "kind": "member", "signature": "(self)", "scope": "PluginManager", "scopeKind": "class"}, {"_type": "tag", "name": "is_plugin_available", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/services/plugin_manager.py", "pattern": "/^    def is_plugin_available(self, key: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, key: str)", "scope": "PluginManager", "scopeKind": "class"}, {"_type": "tag", "name": "plugin_manager", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/services/plugin_manager.py", "pattern": "/^plugin_manager = PluginManager()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "register_plugin", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/services/plugin_manager.py", "pattern": "/^    def register_plugin(self, plugin: ConnectorPlugin) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, plugin: ConnectorPlugin)", "scope": "PluginManager", "scopeKind": "class"}], "hash": "4070dda8f07066f21cad2b7a6426586a", "format-version": 4, "code-base-name": "core_backend", "filename": "core_backend/src/services/plugin_manager.py", "fields": [{"name": "plugin_manager = PluginManager()", "scope": "", "scopeKind": "", "description": "unavailable"}]}