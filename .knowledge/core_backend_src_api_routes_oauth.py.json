{"is_source_file": true, "format": "Python", "description": "This file defines API routes for handling OAuth authorization flows within a FastAPI web application, including initiating OAuth, handling callback responses for both GET and POST methods, processing OAuth callbacks, and revoking OAuth tokens. It manages OAuth state validation, interacts with database models like Connection and OAuthToken, and utilizes plugin management for different OAuth connectors.", "external_files": ["src.database.connection", "src.models.connection", "src.models.oauth_token", "src.services.plugin_manager", "src.auth.jwt", "src.auth.oauth", "src.api.schemas"], "external_methods": ["get_current_user_optional", "plugin_manager.get_plugin", "oauth_helper.generate_state", "oauth_helper.build_redirect_uri", "validate_oauth_callback", "plugin.handle_oauth_callback"], "published": ["initiate_oauth", "handle_oauth_callback_get", "handle_oauth_callback_post", "revoke_oauth_token"], "classes": [], "methods": [{"name": "Optional[Dict[str,Any]] get_current_user(authorization: Optional[str] = Header(None))", "description": "Extracts current user information from the authorization header.", "scope": "", "scopeKind": ""}, {"name": "initiate_oauth( connector_key: str, connection_id: Optional[int] = Query(None, description=\"Existing connection ID to associate with OAuth\"), current_user: Optional[Dict[str, Any]] = Depends(get_current_user), db: Session = Depends(get_db) )", "description": "Starts OAuth authorization process by generating an authorization URL and state.", "scope": "", "scopeKind": ""}, {"name": "handle_oauth_callback_get( connector_key: str, code: Optional[str] = Query(None), state: Optional[str] = Query(None), error: Optional[str] = Query(None), error_description: Optional[str] = Query(None), db: Session = Depends(get_db) )", "description": "Handles OAuth callback via GET request from the OAuth provider.", "scope": "", "scopeKind": ""}, {"name": "handle_oauth_callback_post( connector_key: str, callback_data: OAuthCallbackRequest, db: Session = Depends(get_db) )", "description": "Handles OAuth callback via POST request from the OAuth provider.", "scope": "", "scopeKind": ""}, {"name": "OAuthCallbackResponse _process_oauth_callback( connector_key: str, code: Optional[str], state: Optional[str], error: Optional[str] = None, error_description: Optional[str] = None, connection_id: Optional[int] = None, db: Session = None )", "description": "Common internal function to process OAuth callback, validate state, exchange code for token, and store token if applicable.", "scope": "", "scopeKind": ""}, {"name": "revoke_oauth_token( connector_key: str, connection_id: int, current_user: Optional[Dict[str, Any]] = Depends(get_current_user), db: Session = Depends(get_db) )", "description": "Revokes OAuth tokens associated with a specific connection and marks the connection as inactive.", "scope": "", "scopeKind": ""}], "calls": ["get_current_user_optional", "plugin_manager.get_plugin", "oauth_helper.generate_state", "oauth_helper.build_redirect_uri", "validate_oauth_callback", "plugin.handle_oauth_callback"], "search-terms": ["OAuth", "OAuth API routes", "connectors", "callback", "revoke", "connection_id", "token", "authorization_url"], "state": 2, "file_id": 34, "knowledge_revision": 138, "git_revision": "88e5cce070eb9b0b14b3d249fcaebf888ec532a0", "revision_history": [{"102": ""}, {"109": ""}, {"113": ""}, {"138": "88e5cce070eb9b0b14b3d249fcaebf888ec532a0"}], "ctags": [{"_type": "tag", "name": "_process_oauth_callback", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/oauth.py", "pattern": "/^async def _process_oauth_callback($/", "language": "Python", "typeref": "typename:OAuthCallbackResponse", "kind": "function", "signature": "( connector_key: str, code: Optional[str], state: Optional[str], error: Optional[str] = None, error_description: Optional[str] = None, connection_id: Optional[int] = None, db: Session = None )"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/oauth.py", "pattern": "/^def get_current_user(authorization: Optional[str] = Header(None)) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(authorization: Optional[str] = Header(None))"}, {"_type": "tag", "name": "handle_oauth_callback_get", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/oauth.py", "pattern": "/^async def handle_oauth_callback_get($/", "language": "Python", "kind": "function", "signature": "( connector_key: str, code: Optional[str] = Query(None), state: Optional[str] = Query(None), error: Optional[str] = Query(None), error_description: Optional[str] = Query(None), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "handle_oauth_callback_post", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/oauth.py", "pattern": "/^async def handle_oauth_callback_post($/", "language": "Python", "kind": "function", "signature": "( connector_key: str, callback_data: OAuthCallbackRequest, db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "initiate_oauth", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/oauth.py", "pattern": "/^async def initiate_oauth($/", "language": "Python", "kind": "function", "signature": "( connector_key: str, connection_id: Optional[int] = Query(None, description=\"Existing connection ID to associate with OAuth\"), current_user: Optional[Dict[str, Any]] = Depends(get_current_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "revoke_oauth_token", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/oauth.py", "pattern": "/^async def revoke_oauth_token($/", "language": "Python", "kind": "function", "signature": "( connector_key: str, connection_id: int, current_user: Optional[Dict[str, Any]] = Depends(get_current_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/oauth.py", "pattern": "/^router = APIRouter(prefix=\"\\/oauth\", tags=[\"oauth\"])$/", "language": "Python", "kind": "variable"}], "hash": "1a7ef9a555e3162361ca9e6647f385d5", "format-version": 4, "code-base-name": "core_backend", "filename": "core_backend/src/api/routes/oauth.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/oauth\", tags=[\"oauth\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}