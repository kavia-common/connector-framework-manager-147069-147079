{"is_source_file": true, "format": "Python", "description": "This file defines API routes for managing user connections to external connectors in a web application. It includes endpoints for listing, retrieving, creating, updating, deleting, and testing connections, utilizing FastAPI, SQLAlchemy ORM models, and plugin-based connection testing.", "external_files": ["src/database/connection.py", "src/models/user.py", "src/models/connector.py", "src/models/connection.py", "src/services/plugin_manager.py", "src/auth/jwt.py", "src/api/schemas.py"], "external_methods": ["get_current_user_optional", "plugin_manager.get_plugin", "get_db", "User", "Connector", "Connection"], "published": ["list_connections", "get_connection", "create_connection", "update_connection", "delete_connection", "test_connection"], "classes": [], "methods": [{"name": "Optional[Dict[str,Any]] get_current_user(authorization: Optional[str] = Header(None))", "description": "Extracts the current user from the authorization header.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] require_user(current_user: Optional[Dict[str, Any]] = Depends(get_current_user))", "description": "Ensures that a user is authenticated and raises an error if not.", "scope": "", "scopeKind": ""}, {"name": "create_connection( connection_data: ConnectionCreate, current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "delete_connection( connection_id: int, current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "get_connection( connection_id: int, current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "list_connections( current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "test_connection( connection_id: int, current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "update_connection( connection_id: int, connection_data: ConnectionUpdate, current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["plugin_manager.get_plugin", "get_db", "db.query", "db.add", "db.commit", "db.refresh", "db.delete", "db.query(Connection).options(joinedload(...))"], "search-terms": ["connections API", "connection CRUD", "FastAPI connections routes", "plugin_manager", "schema validation", "OAuth token management", "connection testing"], "state": 2, "file_id": 33, "knowledge_revision": 147, "git_revision": "88e5cce070eb9b0b14b3d249fcaebf888ec532a0", "revision_history": [{"100": ""}, {"105": ""}, {"110": ""}, {"111": ""}, {"145": "88e5cce070eb9b0b14b3d249fcaebf888ec532a0"}, {"147": "88e5cce070eb9b0b14b3d249fcaebf888ec532a0"}], "ctags": [{"_type": "tag", "name": "create_connection", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/connections.py", "pattern": "/^async def create_connection($/", "language": "Python", "kind": "function", "signature": "( connection_data: ConnectionCreate, current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "delete_connection", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/connections.py", "pattern": "/^async def delete_connection($/", "language": "Python", "kind": "function", "signature": "( connection_id: int, current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "get_connection", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/connections.py", "pattern": "/^async def get_connection($/", "language": "Python", "kind": "function", "signature": "( connection_id: int, current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/connections.py", "pattern": "/^def get_current_user(authorization: Optional[str] = Header(None)) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(authorization: Optional[str] = Header(None))"}, {"_type": "tag", "name": "list_connections", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/connections.py", "pattern": "/^async def list_connections($/", "language": "Python", "kind": "function", "signature": "( current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "require_user", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/connections.py", "pattern": "/^def require_user(current_user: Optional[Dict[str, Any]] = Depends(get_current_user)) -> Dict[str/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(current_user: Optional[Dict[str, Any]] = Depends(get_current_user))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/connections.py", "pattern": "/^router = APIRouter(prefix=\"\\/connections\", tags=[\"connections\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "test_connection", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/connections.py", "pattern": "/^async def test_connection($/", "language": "Python", "kind": "function", "signature": "( connection_id: int, current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "update_connection", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/api/routes/connections.py", "pattern": "/^async def update_connection($/", "language": "Python", "kind": "function", "signature": "( connection_id: int, connection_data: ConnectionUpdate, current_user: Dict[str, Any] = Depends(require_user), db: Session = Depends(get_db) )"}], "hash": "d632bd2b8e66d9e283ff1a27ccec4e17", "format-version": 4, "code-base-name": "core_backend", "filename": "core_backend/src/api/routes/connections.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/connections\", tags=[\"connections\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}