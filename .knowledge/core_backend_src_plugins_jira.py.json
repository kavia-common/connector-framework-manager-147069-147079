{"is_source_file": true, "format": "Python", "description": "This file contains a Python implementation of a Jira connector plugin for integrating with Atlassian Jira. It defines a class 'JiraConnector' with methods for obtaining metadata, configuration schema, generating OAuth URLs, handling OAuth callbacks, testing the connection, and fetching sample data.", "external_files": [".base", "src.config"], "external_methods": ["NotConfigured"], "published": ["JiraConnector"], "classes": [{"name": "JiraConnector", "description": "Jira connector plugin class for Atlassian Jira integration, extending ConnectorPlugin with methods for OAuth handling, connectivity testing, and sample data retrieval."}], "methods": [{"name": "PluginMetadata get_metadata(self)", "description": "Returns metadata information about the Jira plugin, including key, name, OAuth scopes, and support for OAuth.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] get_config_schema(self)", "description": "Provides the configuration schema required for Jira integration, including instance URL and email.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "str authorize_url(self, redirect_uri: str, state: str)", "description": "Generates the OAuth authorization URL for Jira, incorporating client ID, scopes, and redirect information.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] handle_oauth_callback(self, code: str, state: str)", "description": "Handles the OAuth callback, simulating token exchange after user authorization.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "bool test_connection(self, config: Dict[str, Any], tokens: Optional[Dict[str, Any]] = None)", "description": "Tests the Jira connection; currently returns True if instance URL and tokens are provided.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] fetch_sample(self, config: Dict[str, Any], tokens: Optional[Dict[str, Any]] = None)", "description": "Fetches sample Jira data including projects and recent issues.", "scope": "JiraConnector", "scopeKind": "class"}], "calls": ["settings.jira_client_id"], "search-terms": ["JiraConnector", "OAuth", "Jira", "connector", "sample data"], "state": 2, "file_id": 19, "knowledge_revision": 132, "git_revision": "2ec6dddd09bed28218dc8f9df2e7ee65406d9d04", "revision_history": [{"56": ""}, {"79": ""}, {"132": "2ec6dddd09bed28218dc8f9df2e7ee65406d9d04"}], "ctags": [{"_type": "tag", "name": "JiraConnector", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/plugins/jira.py", "pattern": "/^class JiraConnector(ConnectorPlugin):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "authorize_url", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/plugins/jira.py", "pattern": "/^    def authorize_url(self, redirect_uri: str, state: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, redirect_uri: str, state: str)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "fetch_sample", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/plugins/jira.py", "pattern": "/^    async def fetch_sample(self, config: Dict[str, Any], tokens: Optional[Dict[str, Any]] = None/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, config: Dict[str, Any], tokens: Optional[Dict[str, Any]] = None)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "get_config_schema", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/plugins/jira.py", "pattern": "/^    def get_config_schema(self) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "get_metadata", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/plugins/jira.py", "pattern": "/^    def get_metadata(self) -> PluginMetadata:$/", "language": "Python", "typeref": "typename:PluginMetadata", "kind": "member", "signature": "(self)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "handle_oauth_callback", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/plugins/jira.py", "pattern": "/^    async def handle_oauth_callback(self, code: str, state: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, code: str, state: str)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "test_connection", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/plugins/jira.py", "pattern": "/^    async def test_connection(self, config: Dict[str, Any], tokens: Optional[Dict[str, Any]] = N/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, config: Dict[str, Any], tokens: Optional[Dict[str, Any]] = None)", "scope": "JiraConnector", "scopeKind": "class"}], "hash": "6b541d43f00feaba6163a325f2d23eb7", "format-version": 4, "code-base-name": "core_backend", "filename": "core_backend/src/plugins/jira.py"}