{"is_source_file": true, "format": "Python", "description": "This file implements a Datadog connector plugin for a monitoring/integration framework. It defines a class `DatadogConnector` that inherits from `ConnectorPlugin` and provides methods for fetching metadata, configuration schema, generating OAuth authorization URLs, handling OAuth callbacks, testing connection, and fetching sample data related to Datadog services.", "external_files": [".base", "# relative import for base classes"], "external_methods": ["os.getenv", "self.metadata.oauth_scopes"], "published": ["DatadogConnector"], "classes": [{"name": "DatadogConnector", "description": "A plugin class for integrating with Datadog's monitoring and dashboard services."}], "methods": [{"name": "PluginMetadata get_metadata(self)", "description": "Returns metadata for the Datadog plugin, including key, name, and OAuth scopes.", "scope": "DatadogConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] get_config_schema(self)", "description": "Provides a JSON schema for configuring the Datadog connection, including site, API key, and app key.", "scope": "DatadogConnector", "scopeKind": "class"}, {"name": "str authorize_url(self, redirect_uri: str, state: str)", "description": "Constructs an OAuth authorization URL for Datadog, using environment variables and input parameters.", "scope": "DatadogConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] handle_oauth_callback(self, code: str, state: str)", "description": "Handles the OAuth callback, returning tokens (placeholder implementation).", "scope": "DatadogConnector", "scopeKind": "class"}, {"name": "bool test_connection(self, config: Dict[str, Any], tokens: Optional[Dict[str, Any]] = None)", "description": "Tests the Datadog connection with provided credentials (placeholder implementation).", "scope": "DatadogConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] fetch_sample(self, config: Dict[str, Any], tokens: Optional[Dict[str, Any]] = None)", "description": "Fetches sample dashboards and metrics from Datadog (placeholder implementation).", "scope": "DatadogConnector", "scopeKind": "class"}], "calls": ["os.getenv", "self.metadata.oauth_scopes"], "search-terms": ["Datadog", "OAuth", "metadata", "connection", "schema", "sample data", "dashboard", "metrics", "api_key", "app_key"], "state": 2, "file_id": 24, "knowledge_revision": 84, "git_revision": "", "revision_history": [{"66": ""}, {"84": ""}], "ctags": [{"_type": "tag", "name": "DatadogConnector", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/plugins/datadog.py", "pattern": "/^class DatadogConnector(ConnectorPlugin):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "authorize_url", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/plugins/datadog.py", "pattern": "/^    def authorize_url(self, redirect_uri: str, state: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, redirect_uri: str, state: str)", "scope": "DatadogConnector", "scopeKind": "class"}, {"_type": "tag", "name": "fetch_sample", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/plugins/datadog.py", "pattern": "/^    async def fetch_sample(self, config: Dict[str, Any], tokens: Optional[Dict[str, Any]] = None/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, config: Dict[str, Any], tokens: Optional[Dict[str, Any]] = None)", "scope": "DatadogConnector", "scopeKind": "class"}, {"_type": "tag", "name": "get_config_schema", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/plugins/datadog.py", "pattern": "/^    def get_config_schema(self) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self)", "scope": "DatadogConnector", "scopeKind": "class"}, {"_type": "tag", "name": "get_metadata", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/plugins/datadog.py", "pattern": "/^    def get_metadata(self) -> PluginMetadata:$/", "language": "Python", "typeref": "typename:PluginMetadata", "kind": "member", "signature": "(self)", "scope": "DatadogConnector", "scopeKind": "class"}, {"_type": "tag", "name": "handle_oauth_callback", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/plugins/datadog.py", "pattern": "/^    async def handle_oauth_callback(self, code: str, state: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, code: str, state: str)", "scope": "DatadogConnector", "scopeKind": "class"}, {"_type": "tag", "name": "test_connection", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/plugins/datadog.py", "pattern": "/^    async def test_connection(self, config: Dict[str, Any], tokens: Optional[Dict[str, Any]] = N/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, config: Dict[str, Any], tokens: Optional[Dict[str, Any]] = None)", "scope": "DatadogConnector", "scopeKind": "class"}], "hash": "3e0cc7e90f162109acd0527530db332d", "format-version": 4, "code-base-name": "core_backend", "filename": "core_backend/src/plugins/datadog.py"}