{"is_source_file": true, "format": "Python", "description": "This file provides utility classes and functions for handling JSON Web Tokens (JWT) including creation, verification, and user token generation, primarily used for authentication and authorization in a FastAPI application.", "external_files": ["os", "datetime", "typing", "jose"], "external_methods": ["jwt.encode", "jwt.decode"], "published": ["jwt_manager", "get_current_user_optional"], "classes": [{"name": "JWTManager", "description": "A class managing JWT token creation and validation, including methods for creating access tokens, verifying tokens, and generating user-specific tokens."}], "methods": [{"name": "str create_access_token(self, data: Dict[str, Any], expires_delta: Optional[timedelta] = None)", "description": "Creates a JWT token with an optional custom expiration.", "scope": "JWTManager", "scopeKind": "class"}, {"name": "Dict[str,Any] verify_token(self, token: str)", "description": "Verifies and decodes a JWT token, raising an HTTPException if invalid.", "scope": "JWTManager", "scopeKind": "class"}, {"name": "str create_user_token(self, user_id: int, email: str)", "description": "Generates a JWT token specifically for a user based on user ID and email.", "scope": "JWTManager", "scopeKind": "class"}, {"name": "__init__(self)", "scope": "JWTManager", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[Dict[str,Any]] get_current_user_optional(token: Optional[str] = None)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["jwt.encode", "jwt.decode"], "search-terms": ["JWT utilities", "JWTManager", "create_access_token", "verify_token", "get_current_user_optional", "fastapi"], "state": 2, "file_id": 28, "knowledge_revision": 88, "git_revision": "", "revision_history": [{"74": ""}, {"88": ""}], "ctags": [{"_type": "tag", "name": "JWTManager", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/auth/jwt.py", "pattern": "/^class JWTManager:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/auth/jwt.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "JWTManager", "scopeKind": "class"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/auth/jwt.py", "pattern": "/^    def create_access_token(self, data: Dict[str, Any], expires_delta: Optional[timedelta] = Non/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, data: Dict[str, Any], expires_delta: Optional[timedelta] = None)", "scope": "JWTManager", "scopeKind": "class"}, {"_type": "tag", "name": "create_user_token", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/auth/jwt.py", "pattern": "/^    def create_user_token(self, user_id: int, email: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, user_id: int, email: str)", "scope": "JWTManager", "scopeKind": "class"}, {"_type": "tag", "name": "get_current_user_optional", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/auth/jwt.py", "pattern": "/^def get_current_user_optional(token: Optional[str] = None) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(token: Optional[str] = None)"}, {"_type": "tag", "name": "jwt_manager", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/auth/jwt.py", "pattern": "/^jwt_manager = JWTManager()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "verify_token", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/auth/jwt.py", "pattern": "/^    def verify_token(self, token: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, token: str)", "scope": "JWTManager", "scopeKind": "class"}], "hash": "8374179b9051d2b771aa060a1fbc27b8", "format-version": 4, "code-base-name": "core_backend", "filename": "core_backend/src/auth/jwt.py", "fields": [{"name": "jwt_manager = JWTManager()", "scope": "", "scopeKind": "", "description": "unavailable"}]}