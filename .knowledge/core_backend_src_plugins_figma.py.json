{"is_source_file": true, "format": "Python", "description": "Source code for a Figma connector plugin implementation, providing methods for OAuth authorization, configuration schema, testing connection, and fetching sample data.", "external_files": [".base"], "external_methods": ["ConnectorPlugin", "PluginMetadata"], "published": ["FigmaConnector"], "classes": [{"name": "FigmaConnector", "description": "Figma connector plugin for Figma design integration."}], "methods": [{"name": "PluginMetadata get_metadata(self)", "description": "Get Figma plugin metadata.", "scope": "FigmaConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] get_config_schema(self)", "description": "Get Figma configuration schema.", "scope": "FigmaConnector", "scopeKind": "class"}, {"name": "str authorize_url(self, redirect_uri: str, state: str)", "description": "Generate Figma OAuth authorization URL.", "scope": "FigmaConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] handle_oauth_callback(self, code: str, state: str)", "description": "Handle Figma OAuth callback.", "scope": "FigmaConnector", "scopeKind": "class"}, {"name": "bool test_connection(self, config: Dict[str, Any], tokens: Optional[Dict[str, Any]] = None)", "description": "Test Figma connection.", "scope": "FigmaConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] fetch_sample(self, config: Dict[str, Any], tokens: Optional[Dict[str, Any]] = None)", "description": "Fetch sample Figma data.", "scope": "FigmaConnector", "scopeKind": "class"}], "calls": ["os.getenv", "os.getenv", "self.metadata.oauth_scopes", "raise ValueError", "async def handle_oauth_callback", "async def test_connection", "async def fetch_sample"], "search-terms": ["FigmaConnector", "OAuth", "fetch_sample", "metadata", "authorize_url"], "state": 2, "file_id": 23, "knowledge_revision": 83, "git_revision": "", "revision_history": [{"64": ""}, {"83": ""}], "ctags": [{"_type": "tag", "name": "FigmaConnector", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/plugins/figma.py", "pattern": "/^class FigmaConnector(ConnectorPlugin):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "authorize_url", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/plugins/figma.py", "pattern": "/^    def authorize_url(self, redirect_uri: str, state: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, redirect_uri: str, state: str)", "scope": "FigmaConnector", "scopeKind": "class"}, {"_type": "tag", "name": "fetch_sample", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/plugins/figma.py", "pattern": "/^    async def fetch_sample(self, config: Dict[str, Any], tokens: Optional[Dict[str, Any]] = None/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, config: Dict[str, Any], tokens: Optional[Dict[str, Any]] = None)", "scope": "FigmaConnector", "scopeKind": "class"}, {"_type": "tag", "name": "get_config_schema", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/plugins/figma.py", "pattern": "/^    def get_config_schema(self) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self)", "scope": "FigmaConnector", "scopeKind": "class"}, {"_type": "tag", "name": "get_metadata", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/plugins/figma.py", "pattern": "/^    def get_metadata(self) -> PluginMetadata:$/", "language": "Python", "typeref": "typename:PluginMetadata", "kind": "member", "signature": "(self)", "scope": "FigmaConnector", "scopeKind": "class"}, {"_type": "tag", "name": "handle_oauth_callback", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/plugins/figma.py", "pattern": "/^    async def handle_oauth_callback(self, code: str, state: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, code: str, state: str)", "scope": "FigmaConnector", "scopeKind": "class"}, {"_type": "tag", "name": "test_connection", "path": "/home/kavia/workspace/code-generation/connector-framework-manager-147069-147079/core_backend/src/plugins/figma.py", "pattern": "/^    async def test_connection(self, config: Dict[str, Any], tokens: Optional[Dict[str, Any]] = N/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, config: Dict[str, Any], tokens: Optional[Dict[str, Any]] = None)", "scope": "FigmaConnector", "scopeKind": "class"}], "hash": "044140ca132d24d6a7e65573e8220500", "format-version": 4, "code-base-name": "core_backend", "filename": "core_backend/src/plugins/figma.py"}